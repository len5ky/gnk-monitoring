server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /var/lib/promtail/positions.yaml

clients:
  - url: ${LOKI_URL}
    basic_auth:
      username: ${LOKI_INGEST_USER}
      password: ${LOKI_INGEST_PASSWORD}
    tls_config:
      insecure_skip_verify: ${TLS_INSECURE_SKIP_VERIFY:-false}

scrape_configs:
  - job_name: docker
    pipeline_stages:
      - docker: {}
      - regex:
          expression: '(?i)(?:level=|\b)(?P<extracted_level>trace|debug|dbg|info|inf|warn|warning|wrn|error|err|critical|crit)\b'
      - regex:
          expression: '(?P<is_health_check>GET .*?/(?:health|state)\s+HTTP)'
      - template:
          source: level
          template: '{{ .extracted_level | default "unknown" | lower }}'
      - template:
          source: health_check
          template: '{{ if .is_health_check }}true{{ else }}false{{ end }}'
      - labels:
          level:
          health_check:
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
    relabel_configs:
      - source_labels: ['__meta_docker_container_id']
        target_label: '__path__'
        replacement: /var/lib/docker/containers/$1/$1-json.log
      - source_labels: ['__meta_docker_container_name']
        target_label: 'container'
        regex: '/(.*)'
      - source_labels: ['__meta_docker_container_label_com_docker_compose_project']
        target_label: 'compose_project'
      - source_labels: ['__meta_docker_container_label_com_docker_compose_service']
        target_label: 'compose_service'
      - source_labels: ['__meta_docker_container_log_stream']
        target_label: 'log_stream'
      - target_label: 'instance_id'
        replacement: ${INSTANCE_ID}
      - target_label: 'instance_ip'
        replacement: ${INSTANCE_IP}

